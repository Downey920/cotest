#include <string>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

struct cmp {
    bool operator()(pair<int,int> a, pair<int,int> b) {
        return a.second > b.second;
    }
};

int solution(vector<vector<int>> jobs) {
    int answer = 0;
    priority_queue<pair<int,int>, vector<pair<int,int>>, cmp> pq;
    sort(jobs.begin(),jobs.end());
    
    int sec = jobs[0][0], index = 0;
    
    while(!pq.empty() || index < jobs.size()) {
        if(index < jobs.size() && sec >= jobs[index][0]) {
            pq.push({jobs[index][0], jobs[index][1]});
            index++;
            continue;
        }
        
        if(!pq.empty()) {
            sec += pq.top().second;
            answer += sec - pq.top().first;
            pq.pop();
        } else sec = jobs[index][0];
    }
    return answer / jobs.size();
}
